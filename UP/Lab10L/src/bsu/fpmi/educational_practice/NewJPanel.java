/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bsu.fpmi.educational_practice;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

import javax.swing.*;
import javax.swing.GroupLayout.Group;

public class NewJPanel extends javax.swing.JPanel {

	String STR = "Button is preesed,";


    String buttonStatus;
    String radioB1Status;
    String radioB2Status;

    String labelText = "", rb1Text, rb2Text, buttonText;
    String labelTag, rb1Tag, rb2Tag, butTag;

	ActionListener listener = new ActionListener()
    {
        @Override
        public void actionPerformed(ActionEvent ae) {

        }
    };

    private char c;

    /**
     * Creates new form NewJPanel
     */
    public NewJPanel(String label, String labelTag,
                     String rb1Text, String rb1Tag,
                     String rb2Text, String rb2Tag,
                     String button, String butTag,
                     char key) {
        this.labelText = label;
        this.labelTag = labelTag;
        this.rb1Text = rb1Text;
        this.rb1Tag = rb1Tag;
        this.rb2Text = rb2Text;
        this.rb2Tag = rb2Tag;
        this.buttonText = button;
        this.butTag = butTag;

        initComponents();
//        setEnterKey("a");
        initEnterKey();

        c=key;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents()
    {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton(); 
        
        
        jRadioButton1.addActionListener(listener);
        jRadioButton1.setSelected(false);

        jRadioButton2 = new javax.swing.JRadioButton();
        
        jRadioButton2.addActionListener(listener);
        jRadioButton2.setSelected(false);

        this.jLabel1 = LabelPropertyEditor.getColorLabel(this.labelTag);
        jLabel1.setText(labelText);
        this.jButton1 = ButtonPropertyEditor.getColoredButton(this.butTag);
        jButton1.setText(buttonText);
        this.jRadioButton1 = RadioPropertyEditor.getColoredRadioButton(this.rb1Tag);
        jRadioButton1.setText(rb1Text);
        this.jRadioButton2 = RadioPropertyEditor.getColoredRadioButton(this.rb2Tag);
        jRadioButton2.setText(rb2Text);


        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addComponent(jRadioButton1)
                .addComponent(jRadioButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2)
                    )
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
    {//GEN-HEADEREND:event_jButton1ActionPerformed
        ShowMessge(jButton1.getText());
    }//GEN-LAST:event_jButton1ActionPerformed

    
private void ShowMessge(String invokername){
    STR = invokername + " invoked event. \n";
    if(jRadioButton1.isSelected()){
        STR+=jRadioButton1.getText()+" is ON \n";
    }
    else{
        STR+=jRadioButton1.getText()+" is OFF \n";
    }

    if(jRadioButton2.isSelected()){
        STR+=jRadioButton2.getText()+" is ON \n";
    }
    else{
        STR+=jRadioButton2.getText()+" is OFF \n";
    }
    JOptionPane.showMessageDialog(this, STR);
    this.setFocusable(true);
}

    private javax.swing.JButton jButton1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JLabel jLabel1;


    private void initEnterKey() {
        this.setFocusable(true);

        this.addKeyListener(new KeyListener() {

            @Override
            public void keyTyped(KeyEvent e) {
                System.out.println("Clicked! "+e.getKeyChar());
                if (e.getKeyChar() == c) {
                    ShowMessge("Key "+e.getKeyChar());
                }
            }

            @Override
            public void keyPressed(KeyEvent e) {
            }

            @Override
            public void keyReleased(KeyEvent e) {
            }
        });
    }
}


